name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    name: Test on ${{ matrix.os }} with Python ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        python-version: ["3.10", "3.11", "3.12"]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        version: "2.1.4"

    - name: Install dependencies
      shell: bash
      run: |
        export PATH="$HOME/.local/bin:$PATH"
        poetry install

    - name: Run tests
      shell: bash
      run: poetry run pytest

    - name: Run linting
      shell: bash
      run: |
        poetry run ruff check .
        poetry run black --check .

    - name: Run security scanning
      shell: bash
      run: |
        poetry run bandit -r fascraft/ -f txt
        poetry run pip-audit

    - name: Test CLI
      shell: bash
      run: |
        poetry run fascraft --help
        poetry run fascraft version
